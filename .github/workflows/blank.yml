name: Manage Secrets Requests

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (create, update)'
        required: true
        type: choice
        options:
          - Create New Secret
          - Delete a Secret
          - Add Key(s) in a Secret
          - Delete Key(s) in a Secret
          - Update Key(s) in a Secret
      tenant:
        description: 'Tenant name'
        required: true
        type: choice
        options:
          - gr
          - isl
          - pt
          - cz
          - al
          - ie
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - test
          - release
          - stage
          - production
      justification:
        description: 'Justification for the action'
        required: true
        type: string
      key:
        description: 'Key'
        required: true
        type: string
      value:
        description: 'Value'
        required: true
        type: string
      key-1:
        description: 'Optional key 1'
        required: false
        type: string
      value-1:
        description: 'Optional value 1'
        required: false
        type: string
      key-2:
        description: 'Optional key 2'
        required: false
        type: string
      value-2:
        description: 'Optional value 2'
        required: false
        type: string 
      key-3:
        description: 'Optional key 3'
        required: false
        type: string
      value-3:
        description: 'Optional value 3'
        required: false
        type: string 
      key-4:
        description: 'Optional key 4'
        required: false
        type: string
      value-4:
        description: 'Optional value 4'
        required: false
        type: string 
      

jobs:
  manage-secrets:
    runs-on: generic

    steps:
    - name: Set up environment variables
      run: |
        echo "ACTION=${{ inputs.action }}" >> $GITHUB_ENV
        echo "TENANT=${{ inputs.tenant }}" >> $GITHUB_ENV
        echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_ENV
        echo "JUSTIFICATION=${{ inputs.justification }}" >> $GITHUB_ENV
        echo "KEY=${{ inputs.key }}" >> $GITHUB_ENV
        echo "VALUE=${{ inputs.value }}" >> $GITHUB_ENV
        echo "KEY-1=${{ inputs.value }}" >> $GITHUB_ENV
        echo "VALUE-1=${{ inputs.value }}" >> $GITHUB_ENV
        echo "KEY-2=${{ inputs.value }}" >> $GITHUB_ENV
        echo "VALUE-2=${{ inputs.value }}" >> $GITHUB_ENV
        echo "KEY-3=${{ inputs.value }}" >> $GITHUB_ENV
        echo "VALUE-3=${{ inputs.value }}" >> $GITHUB_ENV
        echo "KEY-4=${{ inputs.value }}" >> $GITHUB_ENV
        echo "VALUE-4=${{ inputs.value }}" >> $GITHUB_ENV


    - name: Print Environment Variables
      run: |
        echo "Action: $ACTION"
        echo "Tenant: $TENANT"
        echo "Environment: $ENVIRONMENT"
        echo "Justification: $JUSTIFICATION"
        echo "Key: $KEY"
        echo "Value: $VALUE"
        echo "key-1: $KEY-1"
        echo "Value-1: $VALUE-1"
        echo "key-2: $KEY-2"
        echo "Value-2: $VALUE-2"
        echo "key-3: $KEY-3"
        echo "Value-3: $VALUE-3"
        echo "key-4: $KEY-4"
        echo "Value-4: $VALUE-4"

    - name: Create GitHub Issue
      id: create_issue
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const action = process.env.ACTION;
            const tenant = process.env.TENANT;
            const environment = process.env.ENVIRONMENT;
            const justification = process.env.JUSTIFICATION;
            const key = process.env.KEY;
            const value = process.env.VALUE;
            const key-1 = process.env.KEY-1;
            const value-1 = process.env.VALUE-1;
            const key-2 = process.env.KEY-2;
            const value-2 = process.env.VALUE-2;
            const key-3 = process.env.KEY-3;
            const value-3 = process.env.VALUE-3;
            const key-4 = process.env.KEY-4;
            const value-4 = process.env.VALUE-4;


            let issueTitle = `Secret Management: ${action} secret for ${tenant} in ${environment}`;
            let issueBody = `
            ## Secret Management Request

            **Action:** ${action}

            **Tenant:** ${tenant}

            **Environment:** ${environment}

            **Justification:** ${justification}

            - Key: ${key}
            - Value: ${value}
            - Key-1: ${key-1}
            - Value-1: ${value-1}
            - Key-2: ${key-2}
            - Value-2: ${value-2}
            - Key-3: ${key-3}
            - Value-3: ${value-3}
            - Key-4: ${key-4}
            - Value-4: ${value-4}
            `;

            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              assignees: ['mohamedkhames2222@gmail.com'],
              labels: ['ToDo']
            });

            core.setOutput('issue_url', issue.data.html_url);
          } catch (error) {
            core.setFailed(`Error: ${error.message}`);
          }

    - name: Output Issue URL
      run: |
        echo "Issue created: ${{ steps.create_issue.outputs.issue_url }}"
